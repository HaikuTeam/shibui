import { pascalCase } from 'change-case';
import { AssetFolder, CodegenDesignLanguage, GeneratedAsset, GeneratedFont } from './api';
/**
 * A helper class for resolving unique group/slice/artboard names from potentially duplicative sets.
 * @ignore
 */
export declare class UniqueNameResolver {
    private readonly componentResolver;
    private readonly propertyResolver;
    getComponentName(name: string): string;
    getPropertyName(name: string, className: string): string;
}
/**
 * @ignore
 */
export { pascalCase };
/**
 * Generates a fresh design language spec.
 */
export declare const createDesignLanguageSpec: (designLanguageName: string, assetsDirectory: string, filename: string, projectRoot: string) => CodegenDesignLanguage;
/**
 * Registers an asset belonging to a given asset folder in a collection.
 */
export declare const registerAsset: (asset: GeneratedAsset, folder: AssetFolder, collection: Map<AssetFolder, Map<string, GeneratedAsset>>) => void;
/**
 * Registers an asset belonging to a given asset folder in a collection.
 */
export declare const registerFont: (font: GeneratedFont, collection: Map<string, Map<string, {
    name: string;
    path?: string | undefined;
}>>) => Promise<void>;
/**
 * Generates source code for a design language.
 */
export declare const codegenDesignLanguage: (spec: CodegenDesignLanguage) => Promise<void>;
/**
 * Rounds the number to the provided number of decimal points.
 */
export declare const roundFloat: (value: number, decimals?: number) => number;
//# sourceMappingURL=utils.d.ts.map