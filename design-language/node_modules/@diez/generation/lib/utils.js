"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e=require("@diez/cli-core"),a=require("@diez/compiler-core"),t=require("@diez/storage"),n=require("change-case");exports.pascalCase=n.pascalCase;const o=require("fontkit"),i=require("fs-extra"),r=require("path"),s=require("ts-morph"),d=e=>{const a=n.pascalCase(e,void 0,!0);return a.charAt(0).toLowerCase()+a.slice(1)};class c{constructor(){this.componentResolver=new Map,this.propertyResolver=new Map}getComponentName(e){const a=n.pascalCase(e,void 0,!0);if(!this.componentResolver.has(a))return this.componentResolver.set(a,0),a;const t=this.componentResolver.get(a)+1;return this.componentResolver.set(a,t),`${a}${t}`}getPropertyName(e,a){const t=d(e),n=`${a}:${t}`;if(!this.propertyResolver.has(n))return this.propertyResolver.set(n,0),t;const o=this.propertyResolver.get(n)+1;return this.propertyResolver.set(n,o),`${t}${o}`}}exports.UniqueNameResolver=c,exports.createDesignLanguageSpec=((e,a,t,n)=>({assetsDirectory:a,designLanguageName:e,filename:t,projectRoot:n,colors:[],gradients:[],shadows:[],typographs:[],fonts:new Map,assets:new Map})),exports.registerAsset=((e,a,t)=>{const{name:n}=r.parse(e.src);t.has(a)?t.get(a).set(n,e):t.set(a,new Map([[n,e]]))});const l=e=>{e.newLine()},p=(e,a,t)=>s.Writers.object(((e,a,t)=>e.reduce((e,{name:n,initializer:o})=>(e[t.getPropertyName(n||"Untitled Color",a)]=o,e),{}))(e,a,t));exports.registerFont=(async(a,s)=>{const d=n.pascalCase(a.family);s.has(d)||s.set(d,new Map),s.get(d).set(n.pascalCase(a.style),{name:a.name,path:await(async(a,n)=>{const s=o.openSync(a);if(!(e=>null!==e&&"TrueTypeCollection"===e.constructor.name)(s))return a;if(null===s.getFont(n))throw new Error(`The font collection at ${a} does not include a font named ${n}.`);if(!await e.canRunCommand("which otc2otf"))return e.Log.warningOnce("The Adobe Font Development Kit for OpenType is required to extract fonts from font collections.\n\nSee installation instructions here: https://github.com/adobe-type-tools/afdko#installation."),void e.Log.warningOnce(`The font at ${a} cannot be used.`);const d=t.getTempFileName(),c=r.join(d,r.basename(a));i.ensureDirSync(d),i.copySync(a,c),e.Log.info(`Extracting font ${n} from TrueType collection font at ${a}.`),await e.execAsync(`otc2otf ${c}`);for(const e of i.readdirSync(d))if(e===`${n}.ttf`||e===`${n}.otf`)return r.join(d,e)})(a.path,a.name)})}),exports.codegenDesignLanguage=(async e=>{e.designLanguageName=n.pascalCase(e.designLanguageName);const{assetsDirectory:t,designLanguageName:o,projectRoot:m}=e,g=new c,h=a.getProject(m).createSourceFile(e.filename,"",{overwrite:!0}),f=new Set,u=d(g.getComponentName(`${o} Colors`)),y=d(g.getComponentName(`${o} Gradients`)),$=d(g.getComponentName(`${o} Shadows`)),w=d(g.getComponentName(`${o} Typography`)),C=e.colors.length>0,v=e.gradients.length>0,b=e.shadows.length>0,S=e.typographs.length>0;if(C&&(f.add("Color"),h.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:u,initializer:p(e.colors,u,g)}]})),v&&(f.add("LinearGradient"),f.add("Color"),f.add("GradientStop"),f.add("Point2D"),h.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:y,initializer:p(e.gradients,y,g)}]})),b&&(f.add("Color"),f.add("Point2D"),f.add("DropShadow"),h.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:$,initializer:p(e.shadows,$,g)}]})),e.fonts.size){f.add("Font");const a=r.join(t,"fonts");i.ensureDirSync(a);const n=h.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,isExported:!0,declarations:[{name:d(`${o}Fonts`),initializer:"{}"}]}).getDeclarations()[0].getInitializer();for(const[t,o]of e.fonts){const e=n.addPropertyAssignment({name:t,initializer:"{}"}).getInitializer();for(const[t,{name:n,path:s}]of o){if(!s){e.addPropertyAssignment({name:t,initializer:`new Font({name: "${n}"})`});continue}const o=r.join(a,`${n}${r.extname(s)}`);i.copySync(s,o),e.addPropertyAssignment({name:t,initializer:`Font.fromFile("${r.relative(m,o)}")`})}}}S&&(f.add("Color"),f.add("Typograph"),h.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:w,initializer:p(e.typographs,w,g)}]}));for(const[a,t]of e.assets){f.add("Image"),f.add("File");const n={},o={};for(const[e,a]of t){const t=d(e),i=r.parse(a.src);n[t]=`new File({src: "${a.src}"})`,[2,3,4].forEach(e=>{const a=r.join(i.dir,i.name);n[`${t}${e}x`]=`new File({src: "${a}@${e}x${i.ext}"})`}),o[t]=`Image.responsive("${a.src}", ${a.width}, ${a.height})`}h.addVariableStatement({isExported:!0,leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:d(`${e.designLanguageName} ${a} Files`),initializer:s.Writers.object(n)}]}),h.addVariableStatement({isExported:!0,leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:d(`${e.designLanguageName} ${a}`),initializer:s.Writers.object(o)}]})}const x=`${o}Tokens`,T={};return C&&(T.colors=u),v&&(T.gradients=y),b&&(T.shadows=$),S&&(f.add("Font"),T.typography=w),h.addVariableStatement({isExported:!0,leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:d(x),initializer:s.Writers.object(T)}]}),f.size&&h.addImportDeclaration({moduleSpecifier:"@diez/prefabs",namedImports:Array.from(f).sort().map(e=>({name:e}))}),h.formatText(),h.save()}),exports.roundFloat=((e,a=15)=>Math.round(e*Math.pow(10,a))/Math.pow(10,a));
//# sourceMappingURL=/@diez/generation/lib/utils.js.map