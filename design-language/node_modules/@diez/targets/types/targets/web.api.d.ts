import { TargetBinding, TargetOutput } from '@diez/compiler-core';
import { Prefab } from '@diez/engine';
/**
 * Describes an Web third party dependency.
 */
export interface WebDependency {
    packageJson: {
        name: string;
        versionConstraint: string;
    };
}
/**
 * Describes a Web binding.
 */
export interface WebBinding<T extends Prefab<{}> = Prefab<{}>> extends TargetBinding<T, WebOutput> {
    declarations?: string[];
    dependencies?: WebDependency[];
}
/**
 * Describes a style Declaration.
 * @ignore
 */
interface Declaration {
    [key: string]: string;
}
/**
 * Describes a single style Rule.
 * @ignore
 */
export interface Rule {
    selector: string;
    declaration: Declaration;
    rules?: RuleList;
}
/**
 * Provides a common interface to manage lists of nested Style rules.
 *
 * For example, you can manage inserting, deleting and serializing `Rule` objects.
 *
 * @ignore
 */
export declare class RuleList {
    private rules;
    constructor(baseRules?: Rule[]);
    insertRule(rule: Rule): Rule;
    deleteRule(rule: Rule): void;
    clear(): void;
    serialize(): Rule[];
}
/**
 * Describes a collection of tuples containing CSS rules and values.
 * @ignore
 */
export declare type RuleTuples = [string, string][];
/**
 * Describes interfaces related to style rules.
 * @ignore
 */
export interface StyleSheet {
    variables: Map<string, string>;
    font: RuleList;
    styles: RuleList;
}
/**
 * A handlebars token for a style variable.
 * @ignore
 */
export interface StyleVariableToken {
    name: string;
    value: string;
}
/**
 * A collection of handlebars tokens for styles.
 */
export interface StyleTokens {
    styleVariables: StyleVariableToken[];
    styleFonts: Rule[];
    styleSheets: Rule[];
}
/**
 * Describes the complete output for a transpiled Web target.
 */
export interface WebOutput extends TargetOutput<WebDependency, WebBinding> {
    sources: Set<string>;
    declarations: Set<string>;
    declarationImports: Set<string>;
    styleSheet: StyleSheet;
}
/**
 * Valid Web languages.
 */
export declare enum WebLanguages {
    Css = "CSS",
    Scss = "SCSS",
    JavaScript = "JavaScript"
}
export {};
//# sourceMappingURL=web.api.d.ts.map