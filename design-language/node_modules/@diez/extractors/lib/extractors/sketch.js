"use strict";const e=require("@diez/cli-core"),t=require("@diez/generation"),o=require("fs-extra"),r=require("path"),s=require("../utils"),a=".sketch",i=(t,o,a,i)=>{const n=`${t} export --format=png --scales=1,2,3,4 --output=${s.escapeShell(r.join(i,a))} ${a} ${s.escapeShell(o)}`;return e.execAsync(n)},n=e=>"MSArtboardGroup"!==e&&"MSPage"!==e,l=(e,o,s)=>{for(const a of o)a.exportOptions.exportFormats.length&&n(a["<class>"])&&t.registerAsset({src:r.join(e,t.AssetFolder.Slice,`${a.name}.png`),width:a.frame.width,height:a.frame.height},t.AssetFolder.Slice,s),a.layers&&l(e,a.layers,s)},c=(e,o,r)=>{(e=>0===e.gradientType)(e)&&r.gradients.push({name:o,initializer:(e=>{const o=e.stops.map(e=>({position:e.position,colorInitializer:t.getColorInitializer(e.color.value)}));return t.getLinearGradientInitializer(o,e.from,e.to)})(e)})};class u{static create(){return new this}static async canParse(e){return await o.pathExists(e)&&r.extname(e.trim())===a}async export({source:a,assets:n,code:g},p,h=s.cliReporters){if(!await u.canParse(a))throw new Error("Invalid source file");if(!e.isMacOS())throw new Error("Sketch export is only supported on macOS");const d=await e.locateBinaryMacOS("com.bohemiancoding.sketch3"),f=`${d}/Contents/Resources/sketchtool/bin/sketchtool`;if(!d||!await o.pathExists(f))throw new Error("Unable to locate Sketch installation");const m=t.pascalCase(r.basename(a,".sketch")),S=`${m}.sketch`,w=r.join(n,`${S}.contents`);h.progress(`Creating necessary folders for ${S}`),await s.createFolders(w,[t.AssetFolder.Slice]),h.progress(`Running sketchtool export commands for ${S}`);const[b]=await Promise.all([e.execAsync(`${f} dump ${a}`,{maxBuffer:50331648}),i(f,a,t.AssetFolder.Slice,w)]);h.progress(`Extracting design tokens for ${S}`);const y=JSON.parse(b),x=t.createDesignLanguageSpec(m,w,r.join(g,`${S}.ts`),p);l(r.relative(p,w),y.pages,x.assets);for(const{name:e,color:{value:o}}of y.assets.colorAssets)x.colors.push({name:e,initializer:t.getColorInitializer(o)});for(const e of y.assets.gradientAssets)c(e.gradient,e.name,x);for(const e of y.layerStyles.objects.filter(e=>e.value.shadows.length)){const o=e.value.shadows[0],r=t.getDropShadowInitializer({colorInitializer:t.getColorInitializer(o.color.value),offset:{x:o.offsetX,y:o.offsetY},radius:o.blurRadius});x.shadows.push({initializer:r,name:`${e.name} Drop Shadow`})}for(const{name:o,value:{textStyle:r}}of y.layerTextStyles.objects){const s=r.NSFont.attributes.NSFontSizeAttribute,a=await t.locateFont(r.NSFont.family,{name:r.NSFont.attributes.NSFontNameAttribute});a?await t.registerFont(a,x.fonts):e.Log.warning(`Unable to locate system font assets for ${r.NSFont.attributes.NSFontNameAttribute}.`),x.typographs.push({name:o,initializer:t.getTypographInitializer(x.designLanguageName,a,r.NSFont.attributes.NSFontNameAttribute,s,r.MSAttributedStringColorAttribute?t.getColorInitializer(r.MSAttributedStringColorAttribute.value):void 0)})}return t.codegenDesignLanguage(x)}}module.exports=u;
//# sourceMappingURL=/@diez/extractors/lib/extractors/sketch.js.map