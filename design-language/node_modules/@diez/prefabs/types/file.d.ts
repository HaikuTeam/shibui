/**
 * The type of a file resource.
 */
export declare const enum FileType {
    Raw = "raw",
    Image = "image",
    Font = "font"
}
/**
 * File data.
 */
export interface FileData {
    src: string;
    type: FileType;
}
declare const File_base: new (overrides?: Partial<FileData> | undefined) => import("@diez/engine").Prefab<FileData> & FileData;
/**
 * Provides a container for referencing local assets, which can be bridged by compilers to embed images, SVGs,
 * and more. This component is used internally by [[Image]] and [[Font]].
 *
 * The compiler may enforce certain restrictions on the `type` of a `File` instance.
 *
 * Usage: `file = new File({src: 'assets/images/file.jpg', type: FileType.Image});`.
 *
 * @noinheritdoc
 */
export declare class File extends File_base {
    defaults: {
        src: string;
        type: FileType;
    };
    protected sanitize(data: FileData): {
        src: string;
        type: FileType;
    };
}
export {};
//# sourceMappingURL=file.d.ts.map