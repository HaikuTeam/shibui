/**
 * A simple class for formatting messages.
 *
 * Static class members return formatted strings.
 */
export declare class Format {
    /**
     * Formats information messages.
     */
    static info: (...messages: string[]) => string;
    /**
     * Formats info titles.
     */
    static infoTitle: (...messages: string[]) => string;
    /**
     * Formats warning messages.
     */
    static warning: (...messages: string[]) => string;
    /**
     * Formats error messages.
     */
    static error: (...messages: string[]) => string;
    /**
     * Formats comment messages.
     */
    static comment: (...messages: string[]) => string;
    /**
     * Formats code messages.
     */
    static code: (...messages: string[]) => string;
}
/**
 * A simple class for logging messages.
 *
 * Static class members log formatted strings.
 */
export declare class Log {
    /**
     * Logs information messages.
     */
    static info: (...messages: string[]) => void;
    /**
     * Logs information titles.
     */
    static infoTitle: (...messages: string[]) => void;
    /**
     * Logs warning messages.
     */
    static warning: (...messages: string[]) => void;
    /**
     * Logs warning messages once.
     */
    static warningOnce: (...messages: string[]) => void;
    /**
     * Logs error messages.
     */
    static error: (...messages: string[]) => void;
    /**
     * Logs comment messages.
     */
    static comment: (...messages: string[]) => void;
    /**
     * Logs code messages.
     */
    static code: (...messages: string[]) => void;
}
/**
 * Display the provided message alongside a simple spinner.
 */
export declare const loadingMessage: (message: string) => {
    update(newMessage: string): void;
    stop(): void;
};
//# sourceMappingURL=reporting.d.ts.map