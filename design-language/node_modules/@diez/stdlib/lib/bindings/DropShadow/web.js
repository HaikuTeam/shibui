"use strict";const e=require("@diez/cli-core"),a=require("@diez/targets"),s=require("@diez/web-sdk-common"),t=require("path"),o=require("../../utils"),r={sources:[t.join(o.sourcesPath,"web","bindings","DropShadow.js")],declarations:[t.join(o.sourcesPath,"web","bindings","DropShadow.d.ts")],examples:[{example:"Helpers",comment:"`DropShadow` can also be used via mixins, pre-made classes, and provided JavaScript functions.",snippets:[{lang:a.WebLanguages.Scss,template:'@include {{path style="kebab" separator="-"}}-box-shadow();'},{lang:a.WebLanguages.Css,template:'.{{path style="kebab" separator="-"}}-box-shadow();'},{lang:a.WebLanguages.JavaScript,template:"Object.assign(myElement, {{path}}.boxShadowStyle);"}]},{example:"Variables",comment:"A `DropShadow` value can be accessed directly via variables.",snippets:[{lang:a.WebLanguages.Scss,template:'box-shadow: url(#{${{path style="kebab" separator="-"~}}});'},{lang:a.WebLanguages.Css,template:'box-shadow: var(--{{path style="kebab" separator="-"}});'},{lang:a.WebLanguages.JavaScript,template:"myElement.style.boxShadow = {{path}}.boxShadow"}]}],assetsBinder:async(e,t,o,r,l)=>{if("Panel"===l.parentType)return;const n=a.joinToKebabCase(l.parentType,l.name),i=s.dropShadowToCss(e),d=s.dropShadowToFilterCss(e);o.styleSheet.styles.insertRule({selector:`${n}-box-shadow`,declaration:{"box-shadow":i}}),o.styleSheet.styles.insertRule({selector:`${n}-text-shadow`,declaration:{"text-shadow":i}}),o.styleSheet.styles.insertRule({selector:`${n}-filter`,declaration:{filter:d}}),o.styleSheet.variables.set(n,i),o.styleSheet.variables.set(`${n}-filter`,d)},dependencies:[{packageJson:{name:"@diez/web-sdk-common",versionConstraint:`^${e.diezVersion}`}}]};module.exports=r;
//# sourceMappingURL=/@diez/stdlib/lib/bindings/DropShadow/web.js.map