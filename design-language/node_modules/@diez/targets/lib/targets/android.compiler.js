"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e=require("@diez/cli-core"),t=require("@diez/compiler-core"),i=require("@diez/storage"),o=require("change-case"),r=require("fs-extra"),n=require("handlebars"),s=require("internal-ip"),a=require("path"),p=require("../utils"),c=a.join(p.sourcesPath,"android"),u=(e,t)=>{for(const i of e)if(i.gradle.source===t.gradle.source)return;e.add(t)};class d extends t.Compiler{async validateOptions(){}async hostname(){return await s.v4()}get moduleName(){return`diez_${this.output.projectName.replace(/-/g,"_")}`}get hotComponent(){return require.resolve("@diez/targets/lib/targets/android.component")}collectComponentProperties(e,t){const i=t.filter(e=>void 0!==e),o=i[0];if(!o){const t=e.isComponent?e.type:this.getPrimitiveName(e.type);if(!t)return;return{...e,type:`Array<${t}>`,initializer:`arrayOf<${t}>()`}}return{...o,type:`Array<${o.type}>`,initializer:`arrayOf<${o.type}>(${i.map(e=>e.initializer).join(", ")})`}}getInitializer(e){const t=[];for(const i of e.properties)t.push(i.initializer);return`${e.type}(${t.join(", ")})`}getPrimitiveName(e){switch(e){case t.PrimitiveType.String:return"String";case t.PrimitiveType.Float:case t.PrimitiveType.Number:return"Float";case t.PrimitiveType.Int:return"Int";case t.PrimitiveType.Boolean:return"Boolean";default:return}}getPrimitiveInitializer(e,i){switch(e){case t.PrimitiveType.String:return`"${i}"`;case t.PrimitiveType.Float:return`${i.toString()}f`;case t.PrimitiveType.Number:case t.PrimitiveType.Int:case t.PrimitiveType.Boolean:return i.toString();default:return}}createOutput(e,t){const i=`org.diez.${o.camelCase(t)}`,r=i.split(".");return{sdkRoot:e,projectName:t,packageName:i,packageRoot:a.join(e,"src","main","java",...r),components:new Map,processedComponents:new Map,sources:new Set([]),dependencies:new Set,assetBindings:new Map,resources:new Map}}get staticRoot(){return a.join(this.output.sdkRoot,"src","main","res")}printUsageInstructions(){const t=e.Format.code("Diez"),i=Array.from(this.parser.rootComponentNames)[0];e.Log.info(`Diez module compiled to ${this.output.sdkRoot}.\n`),e.Log.info(`You can depend on ${t} in ${e.Format.code("build.gradle")}:`),e.Log.code(`implementation project(':${this.moduleName}')\n`),e.Log.info(`You can use ${t} to bootstrap any of the components defined in your project.\n`),e.Log.code(`import ${this.output.packageName}.*\n\nclass MainActivity ... {\n  override fun onCreate(...) {\n    // ...\n    Diez(\n      ${i}(),\n      viewGroup\n    ).attach(fun(component) {\n      runOnUiThread {\n          // ...\n      }\n    })\n  }\n}\n`)}clear(){this.output.processedComponents.clear(),this.output.dependencies.clear(),this.output.assetBindings.clear()}writeAssets(){if(this.parser.hot)super.writeAssets();else{r.removeSync(this.staticRoot);for(const[e,t]of this.output.resources)for(const[i,o]of t){const t=a.join(this.staticRoot,e),n=a.join(t,i);r.ensureDirSync(t),o.copy?r.copySync(o.contents,n):r.outputFileSync(n,o.contents)}}}async writeSdk(){r.ensureDirSync(this.output.packageRoot);const e=(await t.getAssemblerFactory("android"))(this.output);await e.addCoreFiles();const o=r.readFileSync(a.join(c,"android.data-class.start.handlebars")).toString();n.registerPartial("androidDataClassStart",o);const s=r.readFileSync(a.join(c,"android.component.handlebars")).toString();for(const[t,{binding:i,...o}]of this.output.processedComponents){for(const e of Object.values(o.properties))e.originalType&&this.parser.getComponentForTypeOrThrow(e.originalType).isFixedComponent&&(e.initializer=`${e.type}()`);const p={...{...o,fixed:o.isRootComponent||this.parser.getComponentForTypeOrThrow(t).isFixedComponent,hasProperties:Object.keys(o.properties).length>0},packageName:this.output.packageName},c=`${o.type}.kt`;let d=!1;if(i&&(await Promise.all(i.sources.map(t=>{const i=r.readFileSync(t).toString(),o=a.basename(t),s=a.join(this.output.packageRoot,o);return o===c&&(d=!0),e.writeFile(s,n.compile(i)(p))})),i.dependencies))for(const e of i.dependencies)u(this.output.dependencies,e);if(!d){const t=a.basename(`${o.type}.kt`),i=a.join(this.output.packageRoot,t);await e.writeFile(i,n.compile(s)(p))}}const p={packageName:this.output.packageName,dependencies:Array.from(this.output.dependencies)};return this.writeAssets(),i.outputTemplatePackage(a.join(c,"sdk"),this.output.sdkRoot,p)}}exports.AndroidCompiler=d,exports.androidHandler=(async e=>new d(e).start());
//# sourceMappingURL=/@diez/targets/lib/targets/android.compiler.js.map