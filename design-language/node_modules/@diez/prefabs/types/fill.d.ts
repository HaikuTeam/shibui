import { Color } from './color';
import { LinearGradient } from './linear-gradient';
/**
 * The type of fill.
 */
export declare const enum FillType {
    Color = "Color",
    LinearGradient = "LinearGradient"
}
/**
 * Fill data.
 */
export interface FillData {
    /**
     * The color value of the fill when `type` is `Color`.
     *
     * If type is not `Color` then this value is invalid and should not be read.
     */
    color: Color;
    /**
     * The linear gradient value of the fill when `type` is `LinearGradient`.
     *
     * If type is not `LinearGradient` then this value is invalid and should not be read.
     */
    linearGradient: LinearGradient;
    /**
     * The type of fill.
     *
     * The value of this type determines which property is considered a valid value for the fill.
     */
    type: FillType;
}
declare const Fill_base: new (overrides?: Partial<FillData> | undefined) => import("@diez/engine").Prefab<FillData> & FillData;
/**
 * Describes a fill type.
 *
 * @noinheritdoc
 */
export declare class Fill extends Fill_base {
    defaults: {
        color: Color;
        linearGradient: LinearGradient;
        type: FillType;
    };
    /**
     * Creates a color fill.
     *
     * `const colorFill = Fill.color(Color.rgb(255, 0, 0));`
     */
    static color(color: Color): Fill;
    /**
     * Creates a linear gradient fill.
     *
     * `const linearGradientFill = Fill.linearGradient(LinearGradient.make(Toward.Right, Color.rgb(255, 0, 0), Color.rgb(0, 255, 0)));`
     */
    static linearGradient(linearGradient: LinearGradient): Fill;
}
export {};
//# sourceMappingURL=fill.d.ts.map